name: Deploy LearningHub-Moodle to Prod
on:
  push:
    branches:
      - main
  
permissions:
  id-token: write
  contents: read

jobs:
  build_and_push_docker_image:
    runs-on: ubuntu-latest
    environment: prod
    name: Build and push learninghub moodle cron docker image
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v2

      - name: Replace values in appsettings.json
        run : |
          sed -i -e 's|CRON-URL|${{ vars.CRON_URL }}|g' appsettings.json
          sed -i -e 's/CRON-PASSWORD/${{ secrets.CRON_PASSWORD }}/g' appsettings.json

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  
      - name: Log in to Azure Container Registry
        run: az acr login --name ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ vars.DOCKER_IMAGE_NAME }}:latest . 
          docker push ${{ vars.AZURE_CONTAINER_REGISTRY_NAME }}.azurecr.io/${{ vars.DOCKER_IMAGE_NAME }}:latest

  deploy_learninghubmoodlecron_to_cluster:
    needs: build_and_push_docker_image
    runs-on: ubuntu-latest
    environment: prod
    name: 'Deploy learninghub moodle cron to AKS cluster'
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}

    steps:
      - uses: actions/checkout@v2
  
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get AKS credentials
        run: az aks get-credentials --resource-group ${{ vars.AZURE_RESOURCE_GROUP_NAME }} --name ${{ vars.AZURE_CLUSTER_NAME }}

      - name: Get Storage Account Key
        id: get-storage-key
        run: |
          STORAGE_KEY=$(az storage account keys list --resource-group ${{ vars.AZURE_RESOURCE_GROUP_NAME }} --account-name ${{ vars.AZURE_STORAGE_ACCOUNT_NAME }} --query [0].value -o tsv)
          echo "storage_key=$STORAGE_KEY" >> $GITHUB_OUTPUT

      - name: Deploy cronjob to AKS cluster
        run: kubectl apply -f kubectl/deployment-prod.yml